syntax = "proto3";

package qa;

option go_package = "./;qa";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";

// QAService 定义了问答系统的相关接口
service QAService {
  // --- 问题 (Question) ---
  rpc CreateQuestion(CreateQuestionRequest) returns (QuestionResponse) {
    option (google.api.http) = {
      post : "/api/v1/questions"
      body : "*"
    };
  };
  rpc GetQuestion(GetQuestionRequest) returns (QuestionResponse) {
    option (google.api.http) = {
      get : "/api/v1/questions/{id}"
    };
  };
  rpc ListQuestions(ListQuestionsRequest) returns (ListQuestionsResponse) {
    option (google.api.http) = {
      get : "/api/v1/questions"
    };
  };
  rpc UpdateQuestion(UpdateQuestionRequest) returns (QuestionResponse) {
    option (google.api.http) = {
      put : "/api/v1/questions/{id}"
      body : "*"
    };
  };
  rpc DeleteQuestion(DeleteQuestionRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/v1/questions/{id}"
    };
  };

  // --- 回答 (Answer) ---
  rpc CreateAnswer(CreateAnswerRequest) returns (AnswerResponse) {
    option (google.api.http) = {
      post : "/api/v1/questions/{question_id}/answers"
      body : "*"
    };
  };
  rpc UpdateAnswer(UpdateAnswerRequest) returns (AnswerResponse) {
    option (google.api.http) = {
      put : "/api/v1/answers/{id}"
      body : "*"
    };
  };
  rpc DeleteAnswer(DeleteAnswerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/v1/answers/{id}"
    };
  };
  rpc ListAnswers(ListAnswersRequest) returns (ListAnswersResponse) {
    option (google.api.http) = {
      get : "/api/v1/questions/{question_id}/answers"
    };
  };

  // --- 评论 (Comment) ---
  rpc CreateComment(CreateCommentRequest) returns (CommentResponse) {
    option (google.api.http) = {
      post : "/api/v1/answers/{answer_id}/comments"
      body : "*"
    };
  };
  rpc UpdateComment(UpdateCommentRequest) returns (CommentResponse) {
    option (google.api.http) = {
      put : "/api/v1/comments/{id}"
      body : "*"
    };
  };
  rpc DeleteComment(DeleteCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/api/v1/comments/{id}"
    };
  };
  rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse) {
    option (google.api.http) = {
      get : "/api/v1/answers/{answer_id}/comments"
    };
  };
  rpc UpvoteAnswer(UpvoteAnswerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/api/v1/answers/{answer_id}/upvote"
    };
  };
  rpc DownvoteAnswer(DownvoteAnswerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/api/v1/answers/{answer_id}/downvote"
    };
  };
}

message Question {
  int64 id = 1;
  string title = 2;
  string content = 3;
  int64 user_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

// QuestionResponse 包含问题信息及额外的展示字段
message QuestionResponse {
  int64 id = 1;
  string title = 2;
  string content = 3;
  int64 user_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  string author_name = 7; // 提问者的用户名
  int64 answer_count = 8; // 回答数量
}

message Answer {
  int64 id = 1;
  int64 question_id = 2;
  string content = 3;
  int64 user_id = 4;
  int32 upvote_count = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// AnswerResponse 包含回答信息及额外的展示字段
message AnswerResponse {
  int64 id = 1;
  int64 question_id = 2;
  string content = 3;
  int64 user_id = 4;
  int32 upvote_count = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  string username = 8;         // 回答者的用户名
  bool is_upvoted_by_user = 9; // 当前用户是否点赞了该答案
}

message Comment {
  int64 id = 1;
  int64 answer_id = 2;
  int64 user_id = 3;
  string content = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

// CommentResponse 包含评论信息及额外的展示字段
message CommentResponse {
  int64 id = 1;
  int64 answer_id = 2;
  int64 user_id = 3;
  string content = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  string username = 7; // 评论者的用户名
}

message CreateQuestionRequest {
  string title = 1;
  string content = 2;
}

message GetQuestionRequest { int64 id = 1; }

message ListQuestionsRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message ListQuestionsResponse {
  repeated QuestionResponse questions = 1;
  int64 total_count = 2;
}

message UpdateQuestionRequest {
  int64 id = 1;
  string title = 2;
  string content = 3;
  google.protobuf.FieldMask update_mask = 4;
}

message DeleteQuestionRequest { int64 id = 1; }

message CreateAnswerRequest {
  int64 question_id = 1;
  string content = 2;
}

message UpdateAnswerRequest {
  int64 id = 1;
  string content = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message DeleteAnswerRequest { int64 id = 1; }

message ListAnswersRequest {
  int64 question_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message ListAnswersResponse {
  repeated AnswerResponse answers = 1;
  int64 total_count = 2;
}

message CreateCommentRequest {
  int64 answer_id = 1;
  string content = 2;
}

message UpdateCommentRequest {
  int64 id = 1;
  string content = 2;
  google.protobuf.FieldMask update_mask = 3;
}

message DeleteCommentRequest { int64 id = 1; }

message ListCommentsRequest {
  int64 answer_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message ListCommentsResponse {
  repeated CommentResponse comments = 1;
  int64 total_count = 2;
}

message UpvoteAnswerRequest { int64 answer_id = 1; }
message DownvoteAnswerRequest { int64 answer_id = 1; }