// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/proto/notification/notification.proto

package notification

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Notification 表示单条通知。
type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                       // Mongo ObjectID 字符串表示
	RecipientId   int64                  `protobuf:"varint,2,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // 接收者用户 ID
	SenderId      int64                  `protobuf:"varint,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`          // 发送者用户 ID，可选
	SenderName    string                 `protobuf:"bytes,4,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`     // 发送者用户名，可选
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                   // 通知类型，例如 comment、like
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                             // 通知内容
	TargetUrl     string                 `protobuf:"bytes,7,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`        // 点击通知跳转的链接
	IsRead        bool                   `protobuf:"varint,8,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`                // 是否已读
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`        // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetRecipientId() int64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *Notification) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *Notification) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Notification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// GetNotificationsRequest 采用 page + page_size 的方式进行分页。
type GetNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 服务间调用时可以直接传递；HTTP 网关可从认证信息填充
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 每页数量，服务端可以设置默认值和最大值限制。
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                               // 页码，例如从 1 开始。服务端应处理 0 或负数等边缘情况。
	UnreadOnly    bool                   `protobuf:"varint,4,opt,name=unread_only,json=unreadOnly,proto3" json:"unread_only,omitempty"` // 是否只返回未读通知
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetNotificationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNotificationsRequest) GetUnreadOnly() bool {
	if x != nil {
		return x.UnreadOnly
	}
	return false
}

type GetNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                                // 总数，方便前端分页展示
	UnreadCount   int64                  `protobuf:"varint,3,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"` // 未读数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsResponse) Reset() {
	*x = GetNotificationsResponse{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResponse) ProtoMessage() {}

func (x *GetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{2}
}

func (x *GetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetNotificationsResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// MarkAsReadRequest 支持显式 ID 列表或直接全量标记。
type MarkAsReadRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationIds []string               `protobuf:"bytes,2,rep,name=notification_ids,json=notificationIds,proto3" json:"notification_ids,omitempty"` // 为空且 mark_all=true 时标记全部
	MarkAll         bool                   `protobuf:"varint,3,opt,name=mark_all,json=markAll,proto3" json:"mark_all,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkAsReadRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MarkAsReadRequest) GetNotificationIds() []string {
	if x != nil {
		return x.NotificationIds
	}
	return nil
}

func (x *MarkAsReadRequest) GetMarkAll() bool {
	if x != nil {
		return x.MarkAll
	}
	return false
}

type MarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModifiedCount int64                  `protobuf:"varint,1,opt,name=modified_count,json=modifiedCount,proto3" json:"modified_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkAsReadResponse) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

type DeleteNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNotificationRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type DeleteNotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type GetUnreadCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{7}
}

func (x *GetUnreadCountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUnreadCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnreadCount   int64                  `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountResponse) Reset() {
	*x = GetUnreadCountResponse{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountResponse) ProtoMessage() {}

func (x *GetUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{8}
}

func (x *GetUnreadCountResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type SubscribeNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeNotificationsRequest) Reset() {
	*x = SubscribeNotificationsRequest{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNotificationsRequest) ProtoMessage() {}

func (x *SubscribeNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNotificationsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeNotificationsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// NotificationEvent 用于 Kafka 等内部事件流的载荷定义。
type NotificationEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   int64                  `protobuf:"varint,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	SenderId      int64                  `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	TargetUrl     string                 `protobuf:"bytes,6,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationEvent) Reset() {
	*x = NotificationEvent{}
	mi := &file_api_proto_notification_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEvent) ProtoMessage() {}

func (x *NotificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_notification_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEvent.ProtoReflect.Descriptor instead.
func (*NotificationEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_notification_notification_proto_rawDescGZIP(), []int{10}
}

func (x *NotificationEvent) GetRecipientId() int64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *NotificationEvent) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *NotificationEvent) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *NotificationEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotificationEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationEvent) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

var File_api_proto_notification_notification_proto protoreflect.FileDescriptor

const file_api_proto_notification_notification_proto_rawDesc = "" +
	"\n" +
	")api/proto/notification/notification.proto\x12\fnotification\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x02\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\frecipient_id\x18\x02 \x01(\x03R\vrecipientId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\x03R\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x04 \x01(\tR\n" +
	"senderName\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"target_url\x18\a \x01(\tR\ttargetUrl\x12\x17\n" +
	"\ais_read\x18\b \x01(\bR\x06isRead\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x84\x01\n" +
	"\x17GetNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vunread_only\x18\x04 \x01(\bR\n" +
	"unreadOnly\"\x95\x01\n" +
	"\x18GetNotificationsResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12!\n" +
	"\funread_count\x18\x03 \x01(\x03R\vunreadCount\"r\n" +
	"\x11MarkAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12)\n" +
	"\x10notification_ids\x18\x02 \x03(\tR\x0fnotificationIds\x12\x19\n" +
	"\bmark_all\x18\x03 \x01(\bR\amarkAll\";\n" +
	"\x12MarkAsReadResponse\x12%\n" +
	"\x0emodified_count\x18\x01 \x01(\x03R\rmodifiedCount\"]\n" +
	"\x19DeleteNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\"E\n" +
	"\x1aDeleteNotificationResponse\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\"0\n" +
	"\x15GetUnreadCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\";\n" +
	"\x16GetUnreadCountResponse\x12!\n" +
	"\funread_count\x18\x01 \x01(\x03R\vunreadCount\"8\n" +
	"\x1dSubscribeNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xc1\x01\n" +
	"\x11NotificationEvent\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\x03R\vrecipientId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\x03R\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"target_url\x18\x06 \x01(\tR\ttargetUrl2\xc1\x05\n" +
	"\x13NotificationService\x12\x80\x01\n" +
	"\x10GetNotifications\x12%.notification.GetNotificationsRequest\x1a&.notification.GetNotificationsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/notifications\x12v\n" +
	"\n" +
	"MarkAsRead\x12\x1f.notification.MarkAsReadRequest\x1a .notification.MarkAsReadResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v1/notifications/read\x12\x98\x01\n" +
	"\x12DeleteNotification\x12'.notification.DeleteNotificationRequest\x1a(.notification.DeleteNotificationResponse\"/\x82\xd3\xe4\x93\x02)*'/api/v1/notifications/{notification_id}\x12\x87\x01\n" +
	"\x0eGetUnreadCount\x12#.notification.GetUnreadCountRequest\x1a$.notification.GetUnreadCountResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/notifications/unread-count\x12\x89\x01\n" +
	"\x16SubscribeNotifications\x12+.notification.SubscribeNotificationsRequest\x1a\x1a.notification.Notification\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/notifications/stream0\x01B\x11Z\x0f./;notificationb\x06proto3"

var (
	file_api_proto_notification_notification_proto_rawDescOnce sync.Once
	file_api_proto_notification_notification_proto_rawDescData []byte
)

func file_api_proto_notification_notification_proto_rawDescGZIP() []byte {
	file_api_proto_notification_notification_proto_rawDescOnce.Do(func() {
		file_api_proto_notification_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_notification_notification_proto_rawDesc), len(file_api_proto_notification_notification_proto_rawDesc)))
	})
	return file_api_proto_notification_notification_proto_rawDescData
}

var file_api_proto_notification_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_notification_notification_proto_goTypes = []any{
	(*Notification)(nil),                  // 0: notification.Notification
	(*GetNotificationsRequest)(nil),       // 1: notification.GetNotificationsRequest
	(*GetNotificationsResponse)(nil),      // 2: notification.GetNotificationsResponse
	(*MarkAsReadRequest)(nil),             // 3: notification.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),            // 4: notification.MarkAsReadResponse
	(*DeleteNotificationRequest)(nil),     // 5: notification.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),    // 6: notification.DeleteNotificationResponse
	(*GetUnreadCountRequest)(nil),         // 7: notification.GetUnreadCountRequest
	(*GetUnreadCountResponse)(nil),        // 8: notification.GetUnreadCountResponse
	(*SubscribeNotificationsRequest)(nil), // 9: notification.SubscribeNotificationsRequest
	(*NotificationEvent)(nil),             // 10: notification.NotificationEvent
	(*timestamppb.Timestamp)(nil),         // 11: google.protobuf.Timestamp
}
var file_api_proto_notification_notification_proto_depIdxs = []int32{
	11, // 0: notification.Notification.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: notification.GetNotificationsResponse.notifications:type_name -> notification.Notification
	1,  // 2: notification.NotificationService.GetNotifications:input_type -> notification.GetNotificationsRequest
	3,  // 3: notification.NotificationService.MarkAsRead:input_type -> notification.MarkAsReadRequest
	5,  // 4: notification.NotificationService.DeleteNotification:input_type -> notification.DeleteNotificationRequest
	7,  // 5: notification.NotificationService.GetUnreadCount:input_type -> notification.GetUnreadCountRequest
	9,  // 6: notification.NotificationService.SubscribeNotifications:input_type -> notification.SubscribeNotificationsRequest
	2,  // 7: notification.NotificationService.GetNotifications:output_type -> notification.GetNotificationsResponse
	4,  // 8: notification.NotificationService.MarkAsRead:output_type -> notification.MarkAsReadResponse
	6,  // 9: notification.NotificationService.DeleteNotification:output_type -> notification.DeleteNotificationResponse
	8,  // 10: notification.NotificationService.GetUnreadCount:output_type -> notification.GetUnreadCountResponse
	0,  // 11: notification.NotificationService.SubscribeNotifications:output_type -> notification.Notification
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_notification_notification_proto_init() }
func file_api_proto_notification_notification_proto_init() {
	if File_api_proto_notification_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_notification_notification_proto_rawDesc), len(file_api_proto_notification_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_notification_notification_proto_goTypes,
		DependencyIndexes: file_api_proto_notification_notification_proto_depIdxs,
		MessageInfos:      file_api_proto_notification_notification_proto_msgTypes,
	}.Build()
	File_api_proto_notification_notification_proto = out.File
	file_api_proto_notification_notification_proto_goTypes = nil
	file_api_proto_notification_notification_proto_depIdxs = nil
}
