name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_call:  # 允许被其他 workflow 调用
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: "user-service", port: "50051" }
          - { name: "qa-service", port: "50052" }
          - { name: "search-service", port: "50053" }
          - { name: "notification-service", port: "50054" }
    
    name: Build and push ${{ matrix.service.name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/qahub-${{ matrix.service.name }}
          tags: |
            # 当一个 v* 的 Git 标签被推送时，生成对应的 Docker 标签 (e.g., v1.2.3)
            type=ref,event=tag
            # 为所有事件生成基于 commit SHA 的唯一标签
            type=sha
            # 当一个 v* 的 Git 标签被推送时，同时也标记为 latest
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            SERVICE_NAME=${{ matrix.service.name }}
            PORT=${{ matrix.service.port }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max